name: 'Publish'

on:
  push:
    tags:
      - '**'

jobs:
   publish-npm:
    needs: [lint, tests_full]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - name: Compile contracts
        run: |
          npx hardhat compile --force
        env:
          ALCHEMY_URL: ${{secrets.ALCHEMY_URL}}
      - name: Delete dbg files
        run: find ./artifacts/* -name "*.dbg.json" -type f -delete
      - name: Delete useless files
        run: rm -rf ./artifacts/build-info/*
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          
  publish-pypi:
    runs-on: ubuntu-latest
    needs: [lint, tests_full]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: "step-log-ref"
        run: |
          echo "[C] github.ref: ${{github.ref}}"
      - name: "step-log-event_name "
        run: |
          echo "[C] github.event_name : ${{github.event_name }}"
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-test-unit-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-test-unit-${{ env.cache-name }}-
      - run: npm ci
      - name: Compile contracts
        run: |
          npx hardhat compile --force
        env:
          ALCHEMY_URL: ${{secrets.ALCHEMY_URL}}
      - name: Delete dbg files
        run: find ./artifacts/* -name "*.dbg.json" -type f -delete
      - name: Delete useless files
        run: rm -rf ./artifacts/build-info/*
      - name: Copy artifacts to root folder
        run: find ./artifacts/contracts -name '*.json' -exec mv '{}' './artifacts/' ';'
      - name: Remove folders from artifacts
        run: find ./artifacts -maxdepth 1 -mindepth 1 -type d -exec rm -rf '{}' \;
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Create __init__.py files
        run: |
          find artifacts -type d -exec touch '{}'/__init__.py ';'
          find addresses -type d -exec touch '{}'/__init__.py ';'
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      